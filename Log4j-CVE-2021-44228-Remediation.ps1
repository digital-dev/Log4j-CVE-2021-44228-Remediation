$admincredentials = Get-Credential
$vulnerable_computers = @"
computer-1
computer-2
computer-n
"@
$vulnerable_computers = $vulnerable_computers -split "`r`n"
$7zip_download_location = "\\accessible_networkshare"

Function Fixlog4j ($pcname) {
    $7zip = "Program Files\7-Zip\7z.exe"
    $7zi = Test-Path -Path "\\$pcname\c$\$7zip"
    if ($7zi -eq $true) {
        Invoke-Command -AsJob -Computername $pcname -Credential $admincredentials -ScriptBlock {
            $script:hostname = $ENV:COMPUTERNAME
            # do regular stuff
            $7zip = "C:\Program Files\7-Zip\7z.exe"
            # Get all log4j jar files
            $items = Get-ChildItem -Path "c:\" -Recurse -Filter 'log4j*.jar' -ErrorAction SilentlyContinue
            $items = $items.FullName
            # Loop through all log4j files
            foreach ($item in $items) {
                $JNDIr = & $7zip l "$item" JndiLookup.class -r | Select-String JndiLookup.class
                if ($JNDIr -ne $null) {
                $JNDIf = $JNDIr.ToString().Split("") | where {$_ -ne ""} | where {$_ -match "JndiLookup.Class"}
                [array]$vulnitems += "$ENV:COMPUTERNAME - $item"
                Write-Host -ForegroundColor Red "$hostname - $item contains JNDI Lookup Class."
				# Remove the JNDI Lookup Class from the jar file
                Try {
                    & $7zip d "$item" "$JNDIf" | Out-File -Append C:\temp\l4j_remediation.txt
                }
                Catch {
                    Write-Host "Exception has occured: $_"
                }
                
                } else {
                    Write-Host -ForegroundColor Green "$item does not contain JNDI Lookup Class."
                }
            }
            if ($vulnitems.Count -eq 0) {
                Write-Host -ForegroundColor Green "$hostname did not have any jars containing a JNDI Lookup Class."
                [array]$script:notvulnerable += "$hostname"
            }
    } 
} Else {
        # Copy 7-zip from an accessisble department share or location onto the affected computer
        Copy-Item -Path "$7zip_download_location\7z.dll" -Destination "\\$pcname\c$\temp\"
        Copy-Item -Path "$7zip_download_location\7z.exe" -Destination "\\$pcname\c$\temp\"
        Invoke-Command -AsJob -Computername $pcname -Credential $admincredentials -ScriptBlock {
                $script:hostname = $ENV:COMPUTERNAME
                $7zip = "C:\temp\7z.exe"
                # Get all log4j related files
                $items = Get-ChildItem -Path "c:\" -Recurse -Filter 'log4j*.jar' -ErrorAction SilentlyContinue
                $items = $items.FullName
                # Loop through all log4j Items
                foreach ($item in $items) {
                $JNDIr = & $7zip l "$item" JndiLookup.class -r | Select-String JndiLookup.class
                if ($JNDIr -ne $null) {
                    $JNDIf = $JNDIr.ToString().Split("") | where {$_ -ne ""} | where {$_ -match "JndiLookup.Class"}
                    [array]$vulnitems += "$ENV:COMPUTERNAME - $item"
                    Write-Host -ForegroundColor Red "$hostname - $item contains JNDI Lookup Class."
					# Remove the JNDI Lookup Class from the jar file
                    Try {
                        & $7zip d "$item" "$JNDIf" | Out-File -Append C:\temp\l4j_remediation.txt
                    }
                    Catch {
                        Write-Host "Exception has occured: $_"
                    }  
                } else {
                    Write-Host -ForegroundColor Green "$item does not contain JNDI Lookup Class."
                }
                }
                Remove-Item -Recurse -Path "C:\temp\7z*" -Force
                if ($vulnitems.Count -eq 0) {
                    Write-Host -ForegroundColor Green "$hostname did not have any jars containing a JNDI Lookup Class."
                    [array]$script:notvulnerable += "$hostname"
                }
            }
            
        }
}
Foreach ($computer in $vulnerable_computers) {
    fixlog4j $computer
}